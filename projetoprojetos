#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <stdbool.h>

struct projeto{
	int codigo,status;
	char titulo[100];char descricao[100];char responsavel[100];
};
struct projeto projetos[200];
int opcao, sequencia=0;
const int A=1,F=2,C=3;
void cadastrar_projeto(){
	bool cadastro=true;
	char continuar;
	do{
		system("cls");
		projetos[sequencia].codigo=sequencia+1;
		printf("\nDigite o titulo do projeto: ");
		fflush(stdin);
		gets(projetos[sequencia].titulo);
		printf("\nDigite a descrição do projeto: ");
		fflush(stdin);
		gets(projetos[sequencia].descricao);
		printf("\nDigite o responsavel: ");
		fflush(stdin);
		gets(projetos[sequencia].responsavel);
		printf("\n1 para projeto A FAZER\n2 para projeto FAZENDO\n3 para projeto CONCLUIDO\n\nDigite o status:  ");
		fflush(stdin);
		scanf("%d",&projetos[sequencia].status);
		if(projetos[sequencia].status!=1 && projetos[sequencia].status!=2 && projetos[sequencia].status!=3){
				printf("nananinanão, numero de status nao compatível\ntente novamente\n");
				system("pause");
			}
		printf("\nCadastro realizado com sucesso, deseja realizar um novo cadastro?\nS- sim N- não ");
		fflush(stdin);
		scanf("%c",&continuar);
		if((continuar=='N')||(continuar=='n')){
			cadastro=false;
		}
		sequencia++;
	}while(cadastro==true);
}
void todos_projetos(){
	system("cls");
	int i;
	bool achou;
	if(projetos[0].codigo>0){
		for(i=0;i<sequencia;i++){
			printf("\nCódigo: %d\nTitulo: %s\nDescrição: %s\nResposável: %s\nStatus: %d\n*****************************\n",projetos[i].codigo,projetos[i].titulo,projetos[i].descricao,projetos[i].responsavel,projetos[i].status);
		}
	}else{
		printf("\nNenhum projeto cadastrado");
	}
	system("pause");
}
void por_status(int s){
	system("cls");
	int i;
	bool achou;;
	for(i=0;i<sequencia;i++){
		if(projetos[i].status==s){
			printf("\nCódigo: %d\nTitulo: %s\nDescrição: %s\nResposável: %s\nStatus: %d\n*****************************\n",projetos[i].codigo,projetos[i].titulo,projetos[i].descricao,projetos[i].responsavel,projetos[i].status);
			achou=true;
		}else{
			achou=false;
		}
	}
	system("pause");
}
busca_codigo(){
	int i, busca=0;
	bool achou;
	system("cls");
	printf("\nDigite o código de busca: ");
	scanf("%d",&busca);
	for(i=0;i<busca;i++){
		if(projetos[i].codigo==busca){
			printf("\nCódigo: %d\nTitulo: %s\nDescrição: %s\nResposável: %s\nStatus: %d\n*****************************\n",projetos[i].codigo,projetos[i].titulo,projetos[i].descricao,projetos[i].responsavel,projetos[i].status);
			achou=true;
		}else{
			achou=false;
		}
	}
	if(achou==false){
		printf("\nProjeto não encontrado\n");
	}
	system("pause");
}
edita_codigo(){
	int i, busca=0;
	bool achou;
	system("cls");
	printf("Digite o código do projeto a ser editado: ");
	scanf("%d",&busca);
	for(i=0;i<=busca;i++){
		if(projetos[i].codigo==busca){
			printf("\nDigite o titulo do projeto: ");
			fflush(stdin);
			gets(projetos[i].titulo);
			printf("\nDigite a descrição do projeto: ");
			fflush(stdin);
			gets(projetos[i].descricao);
			printf("\nDigite o responsavel: ");
			fflush(stdin);
			gets(projetos[i].responsavel);
			printf("\n1 para projeto A FAZER\n2 para projeto FAZENDO\n3 para projeto CONCLUIDO\n\nDigite o status:  ");
			fflush(stdin);
			scanf("%d",&projetos[i].status);
			if(projetos[i].status!=1 && projetos[i].status!=2 && projetos[i].status!=3){
				printf("nananinanão, numero de status nao compatível\ntente novamente\n");
				system("pause");
			}
			achou=true;
		}else{
			achou=false;
		}
	}	
}
int main(){
	setlocale(LC_ALL, "Portuguese");
	do{
		system("cls");
		opcao=9;
		printf("Digite 1 para cadastrar projetos\nDigite 2 para imprimir todos os projetos\nDigite 3 para imprimir todos os projetos com status: A FAZER\nDigite 4 para imprimir todos os projetos com status: FAZENDO\nDigite 5 para imprimir todos os projetos com status: CONCLUÍDO\nDigite 6 para busca de projeto por código\nDigite 7 para editar um código\nDigite 0 para sair da aplicação");
		printf("\nDigite a opção desejada: ");
		scanf("%d",&opcao);
		switch(opcao){
			case 1:
				cadastrar_projeto();
			break;
			case 2:
				todos_projetos();
			break;
			case 3:
				por_status(A);
			break;
			case 4:
				por_status(F);
			break;
			case 5:
				por_status(C);
			break;
			case 6:
				busca_codigo();
			break;
			case 7:
				edita_codigo();
			break;
			case 0:
				printf("\nsaindo da aplicação");
			break;
			default:
				printf("\nOpção inválida");
				system("pause");
		}
	}while(opcao!=0);
	return 0;
}
